[gd_scene load_steps=9 format=3 uid="uid://c2tq7thewar7n"]

[ext_resource type="Texture2D" uid="uid://bcbqfmmd11gru" path="res://Assets/Sprites/pixelart/brownSheep.png" id="2_fflu7"]
[ext_resource type="Texture2D" uid="uid://c3qfh1ejnj6sa" path="res://Assets/Sprites/pixelart/sheep.png" id="2_u3a04"]
[ext_resource type="Texture2D" uid="uid://c3kldelvgcmps" path="res://Assets/Sprites/pixelart/Wheat Bar.png" id="4_bjj5s"]
[ext_resource type="Shader" uid="uid://be37vr6g1aif0" path="res://Assets/Sheep.gdshader" id="4_ilodc"]

[sub_resource type="GDScript" id="GDScript_u3a04"]
script/source = "extends CharacterBody2D

@export var speed := 50
@export var moveDurationRange := Vector2(2, 10)
@export var stopDurationRange := Vector2(1, 2)
@export var SpriteA : Texture2D
@export var SpriteB : Texture2D

var sheep_id: int = -1
var current_hunger: int = 5
var max_hunger: int = 10
var health: int = 100
var color_choice: int = 0

var moving := false
var timer := 0.0
var moveTime := 0.0
var stopTime := 0.0
var direction := Vector2.ZERO
var waddleAmplitude := 0.15 
var waddleSpeed := 6.0
var waddleTime := 0.0
@onready var hunger_bar = $HungerBar
@onready var tween = get_tree().create_tween()


func update_hunger_bar():
	if hunger_bar:
		var hunger_ratio = float(current_hunger) / max_hunger
		hunger_bar.value = hunger_ratio * hunger_bar.max_value

func _ready() -> void:
	$Sprite2D.material = $Sprite2D.material.duplicate()
	add_to_group(\"sheep\")
	_startMoving()
	_apply_color_choice()

func _process(delta: float) -> void:
	update_hunger_bar()
	if moving:
		var currentSpeed = speed * Global.speedMultiplier
		velocity.x = direction.x * currentSpeed
		move_and_slide()

		waddleTime += delta * waddleSpeed
		rotation = sin(waddleTime) * waddleAmplitude

		timer += delta
		if timer >= moveTime:
			_startStopping()
	else:
		velocity = Vector2.ZERO
		rotation = 0
		timer += delta
		if timer >= stopTime:
			_startMoving()

	var mouse_pos = get_global_mouse_position()
	var topmost_sheep: CharacterBody2D = null
	var topmost_z := -INF

	for sheep in get_tree().get_nodes_in_group(\"sheep\"):
		if not sheep.has_node(\"Sprite2D\"):
			continue

		var sprite := sheep.get_node(\"Sprite2D\") as Sprite2D
		if not sprite.get_rect().has_point(sprite.to_local(mouse_pos)):
			continue

		if sprite.z_index > topmost_z:
			topmost_z = sprite.z_index
			topmost_sheep = sheep

	if topmost_sheep == self:
		$Sprite2D.material.set_shader_parameter(\"outline_color\", Color(1, 1, 1, 1))
	else:
		$Sprite2D.material.set_shader_parameter(\"outline_color\", Color(1, 1, 1, 0))

func _physics_process(delta: float) -> void:
	if moving:
		var currentSpeed = speed * Global.speedMultiplier
		var collision = move_and_collide(direction * currentSpeed * delta)
		if collision:
			var normal = collision.get_normal()
			var baseAngle = normal.angle()
			var angleOffset = randf_range(-PI/2, PI/2)
			var newAngle = baseAngle + angleOffset
			direction = Vector2(cos(newAngle), sin(newAngle)).normalized()

func _startMoving() -> void:
	moving = true
	timer = 0.0
	moveTime = randf_range(moveDurationRange.x, moveDurationRange.y)
	
	var angle = randf() * TAU
	direction = Vector2(cos(angle), sin(angle)).normalized()

func _startStopping() -> void:
	moving = false
	timer = 0.0
	stopTime = randf_range(stopDurationRange.x, stopDurationRange.y)
	velocity = Vector2.ZERO

func set_hunger_health(current: int, max_h: int, hp: int) -> void:
	current_hunger = current
	max_hunger = max_h
	health = hp

func set_color_choice(choice: int) -> void:
	color_choice = choice
	_apply_color_choice()

func _apply_color_choice() -> void:
	if color_choice == 0:
		$Sprite2D.texture = SpriteA
	else:
		$Sprite2D.texture = SpriteB

func _input_event(viewport, event, shape_idx) -> void:
	if event is InputEventMouseButton and event.pressed and event.button_index == MOUSE_BUTTON_LEFT:
		_on_sheep_clicked()

func _on_sheep_clicked() -> void:
	var food_added = Global.foodInHand
	if food_added <= 0:
		return
	Global.foodInHand = 0
	Global.energy -= 1
	current_hunger += food_added
	if current_hunger > max_hunger:
		var overfeed_amount = current_hunger - max_hunger
		health -= overfeed_amount
		current_hunger = max_hunger
	if sheep_id >= 0 and sheep_id < Global.sheep_data.size():
		Global.sheep_data[sheep_id][\"current_hunger\"] = current_hunger
		Global.sheep_data[sheep_id][\"health\"] = health

func apply_hunger_decay_on_load() -> bool:
	var decay_percent = randf_range(0.1, 0.5)
	current_hunger = int(current_hunger * (1.0 - decay_percent))
	if current_hunger < 0:
		current_hunger = 0
	if sheep_id >= 0 and sheep_id < Global.sheep_data.size():
		Global.sheep_data[sheep_id][\"current_hunger\"] = current_hunger
	if current_hunger <= 0 or health <= 0:
		health = 0
		if sheep_id >= 0 and sheep_id < Global.sheep_data.size():
			Global.sheep_data[sheep_id][\"health\"] = 0
		return true 
	return false 


func _on_mouse_entered() -> void:
	tween.kill()
	tween = get_tree().create_tween()
	hunger_bar.visible = true
	hunger_bar.modulate.a = 0.0
	tween.tween_property(hunger_bar, \"modulate:a\", 1.0, 0.1)

func _on_mouse_exited() -> void:
	tween.kill()
	tween = get_tree().create_tween()
	tween.tween_property(hunger_bar, \"modulate:a\", 0.0, 0.5) 
	tween.tween_callback(Callable(hunger_bar, \"hide\"))
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ilodc"]
shader = ExtResource("4_ilodc")
shader_parameter/outline_width = 1.0
shader_parameter/outline_color = Color(0, 0, 0, 0)
shader_parameter/texture_region = Vector4(0, 0, 0, 0)
shader_parameter/interval = 0.1
shader_parameter/timeDelay = 0.0
shader_parameter/intensityX = 1.0
shader_parameter/intensityY = 1.0
shader_parameter/seed = 800853.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_fcrfa"]
size = Vector2(60, 43)

[sub_resource type="MeshTexture" id="MeshTexture_ilodc"]

[node name="Sheep" type="CharacterBody2D"]
collision_layer = 2
input_pickable = true
script = SubResource("GDScript_u3a04")
SpriteA = ExtResource("2_fflu7")
SpriteB = ExtResource("2_u3a04")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_ilodc")
scale = Vector2(2, 1.84)
texture = ExtResource("2_u3a04")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -4)
shape = SubResource("RectangleShape2D_fcrfa")

[node name="HungerBar" type="TextureProgressBar" parent="."]
visible = false
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -45.0
offset_top = -42.0
offset_right = 76.0
offset_bottom = -14.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.75, 0.75)
max_value = 5.0
value = 5.0
texture_under = SubResource("MeshTexture_ilodc")
texture_progress = ExtResource("4_bjj5s")
tint_under = Color(0, 1, 1, 1)

[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_mouse_exited"]
